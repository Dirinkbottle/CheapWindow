# Nginx配置示例
# 用于生产环境部署

server {
    listen 80;
    server_name your-domain.com;  # 修改为你的域名

    # 日志配置
    access_log /var/log/nginx/cheap-window-access.log;
    error_log /var/log/nginx/cheap-window-error.log;

    # 客户端最大上传大小
    client_max_body_size 10M;

    # 前端静态文件
    location / {
        root /path/to/CheapWindow/server/public;  # 修改为实际路径
        try_files $uri $uri/ /index.html;
        
        # 缓存配置
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # 后端API
    location /api {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        
        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket配置（重要！）
    location /socket.io {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        
        # WebSocket必需的头
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket超时设置（保持长连接）
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/javascript application/xml+rss application/json;
}

# HTTPS配置（可选，使用Let's Encrypt）
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
# 
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     # SSL配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # 其他配置同上...
# }
# 
# # HTTP重定向到HTTPS
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }

